#!/bin/bash

set -Eeo pipefail

AWS_REGION=eu-west-2
AWS_HELPERS_FILE="utils/aws-helpers"
AWS_HELPERS_VERSION=0.2.1

mkdir -p utils
if [[ ! -f $AWS_HELPERS_FILE ]];then
  wget --quiet -O $AWS_HELPERS_FILE https://github.com/nhsconnect/prm-deductions-support-infra/releases/download/${AWS_HELPERS_VERSION}/aws-helpers
fi
chmod +x $AWS_HELPERS_FILE
source $AWS_HELPERS_FILE

function check_env {
  if [[ -z "${NHS_ENVIRONMENT}" ]]; then
    echo "Must set NHS_ENVIRONMENT"
    exit 1
  fi
}

function tf_init {
  check_env
  #  Condition [ $NHS_ENVIRONMENT == "test" ] is required as test environment infrastructure is deployed in CI AWS account
  [ $NHS_ENVIRONMENT == "ci" ] || [ $NHS_ENVIRONMENT == "test" ] &&  bucket_env_infix=""  || bucket_env_infix="$NHS_ENVIRONMENT-"

  terraform init -reconfigure \
    -backend-config key="${NHS_SERVICE}-${NHS_ENVIRONMENT}/terraform.tfstate" \
    -backend-config bucket="prm-deductions-${bucket_env_infix}terraform-state" \
    -backend-config dynamodb_table="prm-deductions-${bucket_env_infix}terraform-table" \
    -backend-config region=${AWS_DEFAULT_REGION}
}

function tf_plan {
  operation=$1

  tf_init
  terraform get # modules
  if [[ "${operation}" == "create" ]]; then
    terraform plan -var-file=terraform.tfvars -out="nhs_deployment.tfplan"
  elif [[ "${operation}" == "destroy" ]]; then
    terraform plan -var-file=terraform.tfvars -out="nhs_deployment.tfplan" -destroy
  else
    echo "Unknown operation (should be create or destroy), got: ${operation}"
    exit 1
  fi
}

function tf_apply {
  tf_init
  terraform get # modules
  terraform apply nhs_deployment.tfplan
  terraform output -json > tf-out.json
}

function _get_aws_ssm_secret {
  secret_id=$1
  json=$(aws ssm get-parameter --with-decryption --region $AWS_REGION --name $secret_id)
  if [ $? != 0 ]; then
    >&2 echo "Failed to obtain AWS secret from SSM: $secret_id"
    exit 5
  fi
  echo $json | jq -r ".Parameter.Value"
}

command="$1"
case "${command}" in
  tf)
      dojo "bash"
      ;;
  _tf_plan)
      _assume_environment_role $NHS_ENVIRONMENT
      tf_plan "$2"
      ;;
  tf_plan)
      dojo "./tasks _tf_plan $2"
      ;;
  _tf_apply)
      _assume_environment_role $NHS_ENVIRONMENT
      tf_apply
      ;;
  tf_apply)
      dojo "./tasks _tf_apply"
      ;;
  *)
      echo "Invalid command: '${command}'"
      exit 1
      ;;
esac
set +e
